<?xml version="1.0" encoding="UTF-8"?>
<project name="TmL build system" basedir="." default="tml.full_build">

	<!-- inputs: the TmL need to fill the values of the properties below according to their need-->
	<property name="tml.export.output.path" value="${targetData}/export_output"/>
	<property name="tml.features.to.export" value="org.eclipse.tml.common.feature,org.eclipse.tml.sdk.feature,org.eclipse.tml.linuxtools.feature"/>
	<property name="tml.features.to.export.source" value="org.eclipse.tml.common.feature,org.eclipse.tml.sdk.feature,org.eclipse.tml.linuxtools.feature"/>
	<property name="tml.repository.path" value="${targetData}/tml_repository" />
	<property name="tml.repository.url" value="file:${tml.repository.path}" />
	<property name="tml.repository.name" value="Tools for mobile Linux (TmL) " />
	<property name="tml.dependencies.repositories.url" value="file:${data}"/>

	<!--property environment="basedir"  value="/opt/public/dsdp/tml/data"/-->
	<property name="target"  value="${target}"/>
	<property environment="eclipse.home"  value="${eclipse.home}"/>
	<property name="tml.target.os"  value="win32"/>
	<property name="tml.target.ws"  value="win32"/>
	<property name="tml.target.arch"  value="x86"/>
	<property name="tml.target.platform.zip" value="${tml.export.output.path}/output/platform-${tml.target.os}.${tml.target.ws}.${tml.target.arch}.zip"/>
	
	<!-- Remove outputs of a previous build -->
	<target name="tml.clean_build_output">
		<echo level="info" message="Clean outputs of the previous build..." />
		
		<delete dir="${tml.export.output.path}"/>
		<mkdir dir="${tml.export.output.path}"/>
		
		<delete dir="${tml.repository.path}"/>
		<mkdir dir="${tml.repository.path}"/>
		
	</target>
		
	<!-- Compile and Export the TmL's Features -->
	<target name="tml.export_features">
		<echo level="info" message="Exporting features..." />
		
		<pde.exportFeatures destination="${tml.export.output.path}" exportSource="false" exportType="jar"
					features="${tml.features.to.export}" useJARFormat="true" qualifier="200906082200" />

		<pde.exportFeatures destination="${tml.export.output.path}/sources" exportSource="true" exportType="jar"
						features="${tml.features.to.export.source}" useJARFormat="true" qualifier="200906082200"/>
		
		<available file="${tml.export.output.path}\logs.zip" property="tml.export.features.failed" value="true"/>
		<fail if="tml.export.features.failed" message="Failed to export features and plug-ins.\nCheck ${tml.export.output.path}\logs.zip for more information."/>
	</target>
	
	
	<!-- Sign the exported features if the signature parameters are provided -->
    <target name="tml.sign_exported_features" if="tml.keystore, tml.keypass, tml.storepass, tml.alias">
       <signjar  keystore="${tml.keystore}" keypass="${tml.keypass}"	storepass="${tml.storepass}" alias="${tml.alias}">
        <path>
	          <fileset dir="${tml.export.output.path}" includes="**/*.jar" />
        </path>
       </signjar>  
    </target>
    	
	<!-- Generate a p2 repository for the exported features -->
	<target name="tml.generate_p2_repository">
		<p2.generator
			source="${tml.export.output.path}"
			append="true"
			metadatarepository="${tml.repository.url}"
			artifactrepository="${tml.repository.url}"
			metadatarepositoryname="${tml.repository.name}"
			artifactrepositoryname="${tml.repository.name}"
			publishartifactrepository="true"
			publishartifacts="true"
			nodefaultius="true"	
		/>
	</target>
	
	<target name="tml.add_binary_artifacts">
		<copydir dest="${tml.export.output.path}/tmp/output/binary" src="${tml.export.output.path}/tmp/output/tml_repository"/>

		<replace file="${tml.repository.path}/artifacts.xml" token="" value=""/>
	</target>
	
	<!-- Performs all tasks to generate the full product -->
	<target name="tml.full_build" depends="tml.clean_build_output">
		<antcall target="tml.export_features" inheritall="yes"/>
		<antcall target="tml.sign_exported_features" inheritall="yes"/>
		<antcall target="tml.generate_p2_repository" inheritall="yes"/>
		
	</target>

</project>
