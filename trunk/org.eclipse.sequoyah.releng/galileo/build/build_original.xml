<?xml version="1.0" encoding="UTF-8"?>
<project name="MOTODEV Studio for Android" default="generate.release.artifacts" basedir="../">

	<description>
     This Build file generates the Studio Android Product using PDE + P2 infraestructure
     USAGE:
     ant generate.release.artifacts [to generate Release Artifacts]
     ant generate.release.artifacts -Dmotodev.storepass=[storepass] -Dmotodev.keypass=[keypass] [to build the product signing the features and plugins]
    </description>

	<!-- define timestamp for build -->
	<tstamp>
		<format property="timestamp" pattern="yyyyMMddhhmm" />
	</tstamp>

	<!-- define basic properties -->
	<property environment="env" />
	<property name="BUILD_DIR" value="/build" />
	<property file="${BUILD_DIR}/build.properties" />
	<property name="eclipse.base" value="/eclipse" />
	<property name="eclipse.base.launcher" value="org.eclipse.equinox.launcher_1.0.201.R35x_v20090715.jar" />
	<property name="eclipse.base.pde" value="org.eclipse.pde.build_3.5.1.R35x_20090820" />
	<property name="forceContextQualifier" value="${timestamp}" />

	<!-- clean output directory -->
	<target name="clean">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${OUTPUT_DIR}/tmp" includes="**/**" />
		</delete>
	</target>

	<!-- initialize build (remove all previous output and copy source to a temporary location) -->
	<target name="init">
		<echo level="info">
			###################################
			1 (5) Init phase: cleaning previous build
			###################################
		</echo>
		<defaultexcludes add="**/*.contrib" />
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${OUTPUT_DIR}/" includes="**/*" />
			<fileset dir="${buildDirectory}" includes="**/**" />
			<fileset dir="${SOURCE_DIR}" includes="**/**" />
		</delete>


		<echo level="info">
			###################################
			s (5) Fetch phase: fetching elements from SVN
			###################################
		</echo>
		<!-- path and typedef necessary for checking out SVN repo -->
		<path id="svnant.classpath">
		<fileset dir="${basedir}/svnant/svnant-1.3.0/lib/">
			<include name="*.jar" />
		</fileset>
		</path> 
		<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />

		<property name="svnrepo" value="http://dev.eclipse.org/svnroot/dsdp/org.eclipse.sequoyah" />
		<property name="device" value="org.eclipse.sequoyah.device" />
		<property name="vnc" value="org.eclipse.sequoyah.vnc" />
		<property name="localization" value="org.eclipse.sequoyah.localization" />

		
		<echo level="info" message="Updating plugins and features from SVN repository..." />

		<mkdir dir="${SOURCE_DIR}" />

		<svn javahl="false">
			<!-- org.eclipse.sequoyah.device examples/features/plugins -->
			<checkout url="${svnrepo}/branches/Refactoring/${device}/examples" destPath="${SOURCE_DIR}" />
			<checkout url="${svnrepo}/branches/Refactoring/${device}/features" destPath="${SOURCE_DIR}" />
			<checkout url="${svnrepo}/branches/Refactoring/${device}/plugins" destPath="${SOURCE_DIR}" />
			<!-- org.eclipse.sequoyah.localization features/plugins -->
			<checkout url="${svnrepo}/branches/Refactoring/${localization}/features" destPath="${SOURCE_DIR}" />
			<checkout url="${svnrepo}/branches/Refactoring/${localization}/plugins"	destPath="${SOURCE_DIR}" />
			<!-- org.eclipse.sequoyah.vnc examples/features/plugins -->
			<checkout url="${svnrepo}/branches/Refactoring/${vnc}/features" destPath="${SOURCE_DIR}" />
			<checkout url="${svnrepo}/branches/Refactoring/${vnc}/plugins" destPath="${SOURCE_DIR}" />
		</svn>

		<copy todir="${buildDirectory}">
			<fileset dir="${SOURCE_DIR}/org.eclipse.sequoyah.device" includes="**/**" />
			<fileset dir="${SOURCE_DIR}/org.eclipse.sequoyah.localization" includes="**/**" />
			<fileset dir="${SOURCE_DIR}/org.eclipse.sequoyah.vnc" includes="**/**" />
		</copy>
		<move todir="${buildDirectory}/plugins">
			<fileset dir="${buildDirectory}/examples/" includes="**" />
		</move>
		<delete dir="${buildDirectory}/examples/" />
	</target>

	<target name="clearSettings">
		<echo level="info">
			ClearSettings: cleaning eclipse settings
		</echo>
		<delete failonerror="false" includeEmptyDirs="true" verbose="true">
			<fileset dir="${eclipse.base}/configuration/.settings/" includes="**/**" />
		</delete>
	</target>

	<target name="generate.release.artifacts" depends="init, build.pde" description="Generate Release Artifacts">
		<antcall target="clean" />
		<echo level="info">
			###################################
			5 (5) Creating installed products and their instalelrs
			###################################
		</echo>
		<echo level="info">
			###################################
			BUILD COMPLETELY DONE
			###################################
		</echo>
	</target>

	<target name="build.pde">
		<echo level="info">
			###################################
			2 (5) PDE Build
			###################################
		</echo>
		<antcall target="clearSettings" />
		<echo level="info">
			Using qualifier: ${forceContextQualifier}
			Using timestamp: ${timestamp}
		</echo>
		<echo level="info">
			Calling antRunner with the following arguments: 
			-buildfile ${eclipse.base}/plugins/${eclipse.base.pde}/scripts/build.xml 
			-Dbuilder=${BUILD_DIR}
			-DBUILD_DIR=${BUILD_DIR}
		</echo>
		<java failonerror="true" jar="${eclipse.base}/plugins/${eclipse.base.launcher}" fork="true">
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${eclipse.base}/plugins/${eclipse.base.pde}/scripts/build.xml" />
			<arg value="-Dbuilder=${BUILD_DIR}" />
			<arg value="-DBUILD_DIR=${BUILD_DIR}" />
			<arg value="-Dtimestamp=${timestamp}" />
			<arg value="-DforceContextQualifier=${forceContextQualifier}" />
		</java>
	</target>
</project>
