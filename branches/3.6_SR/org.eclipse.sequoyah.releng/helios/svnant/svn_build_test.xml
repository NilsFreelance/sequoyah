<project name="org.eclipse.tml" default="build" basedir="./data">
	<property name="data" location="${basedir}" />
	<property name="metadata" location="${basedir}/../seq_metadata_pastore" />
	<property name="eclipsehome" value="${basedir}/../new_stuff/eclipse" />
	<property name="jvm15home" value="/opt/public/dsdp/JDKs/ibm-java2-ppc-50" />
	<property name="launcher" value="${eclipsehome}/plugins/org.eclipse.equinox.launcher_1.0.201.R35x_v20090715.jar" />
	<property name="runner" value="org.eclipse.ant.core.antRunner" />
	<property name="buildSourceFile" value="${data}/org.eclipse.sequoyah.site.feature/sequoyah_build.xml" />
	<property name="targetData" value="${basedir}/../target" />
	<property name="buildDirectory" value="${targetData}" />
	<property name="tml.download.output.path" value="${targetData}/export_output" />
	<property name="tml.download.output.path.temp" value="${tml.download.output.path}/temp" />
	<property name="tml.features" value="${tml.download.output.path}/features" />
	<property name="tml.plugins" value="${tml.download.output.path}/plugins" />
	<property name="tml.plugins-src" value="${tml.download.output.path}/sources/plugins" />
	<property name="tml.updatesite" value="/home/data/httpd/download.eclipse.org/dsdp/tml/updates/sequoyah" />
	<property name="tml.downloadsite" value="/home/data/httpd/download.eclipse.org/dsdp/tml/downloads/drops/sequoyah" />
	<property environment="JAVA_HOME" value="/opt/public/dsdp/JDKs/ibm-java2-ppc-50" />
	<property name="repData" value="${targetData}/tml_repository" />
	<property environment="env" />
	<property name="user" value="${env.USER}" />

	<tstamp />
	<property name="date" value="${DSTAMP}" />
	<property name="time" value="${TSTAMP}" />
	<property name="timestamp" value="201001081511" />
	<!-- check if this mapVersionTag is still necessary,
		it should be used only for CVS, but needs a double check -->
	<property name="mapVersionTag" value="dsdp_sequoyah_0_1_0_N" />
	<property name="buildSuffix" value="-" />
	<property name="buildType" value="N" />
	<property name="buildDown" value="N" />
	<property name="buildId" value="0.1" />
	<property name="tml.timestamp" value="${buildType}-${buildId}-${timestamp}" />
	<property name="tml.zipstamp" value="${buildType}-${buildId}" />
	<property name="tml.downstamp" value="${buildDown}-${buildId}-${timestamp}" />
	<property name="buildLabel" value="${tml.timestamp}" />
	<property name="baseLocation" value="${basedir}" />
	<property name="feature.destination" value="${targetData}" />
	<property name="plugin.destination" value="${targetData}" />
	<property name="target" value="build.jars" />
	
	<!-- path and typedef necessary for checking out SVN repo -->
	<path id="svnant.classpath">
		<fileset dir="${basedir}/../svnant/svnant-1.3.0/lib/">
			<include name="*.jar" />
		</fileset>
	</path>
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />

	<property name="svnrepo" value="http://dev.eclipse.org/svnroot/dsdp/org.eclipse.sequoyah" />
	<property name="device" value="org.eclipse.sequoyah.device" />
	<property name="vnc" value="org.eclipse.sequoyah.vnc" />
	<property name="localization" value="org.eclipse.sequoyah.localization" />

	<!-- ******************************************************************** -->
	<!-- ************************ End of definitions ************************ -->
	<!-- ******************************************************************** -->

	<target name="clean">
		<echo level="info" message="[Target: clean]" />
		<echo level="info" message="Clean folders and files before build process..." />
		<delete dir="${data}" />
		<mkdir dir="${data}" />
		<!-- mkdir dir="${data}/svn" / -->
		<delete dir="${targetData}" />
		<copy todir="${data}">
			<fileset dir="${metadata}" />
		</copy>
	</target>

	<target name="fetch" depends="clean">
		<echo level="info" message="[Target: fetch]" />
		<echo level="info" message="Updating plugins and features from SVN repository..." />

		<svn javahl="false">
			<checkout url="${svnrepo}/branches/org.eclipse.sequoyah.renamingTmL" destPath="${data}" />

			<!-- org.eclipse.sequoyah.device examples/features/plugins -->
			<!-- checkout url="${svnrepo}/trunk/${device}/features" destPath="${data}" / -->
			<!-- checkout url="${svnrepo}/trunk/${device}/examples" destPath="${data}" / -->
			<!-- checkout url="${svnrepo}/trunk/${device}/plugins" destPath="${data}" / -->
			<!-- org.eclipse.sequoyah.localization features/plugins -->
			<!-- checkout url="${svnrepo}/trunk/${localization}/features" destPath="${data}" / -->
			<!-- checkout url="${svnrepo}/trunk/${localization}/plugins"	destPath="${data}" / -->
			<!-- org.eclipse.sequoyah.vnc examples/features/plugins -->
			<!-- checkout url="${svnrepo}/trunk/${vnc}/features" destPath="${data}" / -->
			<!-- checkout url="${svnrepo}/trunk/${vnc}/plugins" destPath="${data}" / -->
		</svn>
			<!-- move todir="${data}">
				<fileset dir="${data}/svn/${device}/features" />
				<fileset dir="${data}/svn/${device}/examples" />
				<fileset dir="${data}/svn/${device}/plugins" />
				<fileset dir="${data}/svn/${localization}/features" />
				<fileset dir="${data}/svn/${localization}/plugins" />
				<fileset dir="${data}/svn/${vnc}/features" />
				<fileset dir="${data}/svn/${vnc}/plugins" />
			</move -->

		<replace dir="${data}" value="${timestamp}">
			<include name="**/about.mappings" />
			<replacefilter token="@build@" />
		</replace>
	</target>

	<target name="build-wo">
		<echo message="basedir  ${basedir}" />
		<echo message="data ${data}" />
		<echo message="metadata ${metadata}" />
		<echo message="eclipsehome ${eclipsehome}" />
		<echo message="launcher ${launcher}" />
		<echo message="runner ${runner}" />
		<echo message="buildSourceFile ${buildSourceFile}" />

		<antcall target="run.java" />
	</target>

	<target name="build" depends="fetch">
		<echo level="info" message="[Target: build]" />
		<antcall target="run.java" />
	</target>

	<target name="run.java">
		<echo level="info" message="[Target: run.java]" />
		<java jar="${launcher}" classpath="${eclipsehome}" fork="true" resultproperty="buildResult">
			<arg line=" -application ${runner} -data ${data} -buildfile ${buildSourceFile}" />
			<sysproperty key='eclipse.home' value='${eclipsehome}' />
			<sysproperty key='mapVersionTag' value='${mapVersionTag}' />
			<sysproperty key='buildType' value='${buildType}' />
			<sysproperty key='buildId' value='${buildId}' />
			<sysproperty key='buildLabel' value='${buildType}-${timestamp}' />
			<sysproperty key='baseLocation' value='${basedir}' />
			<sysproperty key='feature.destination' value='${targetDir}' />
			<sysproperty key='plugin.destination' value='${targetDir}' />
			<sysproperty key='targetData' value='${targetData}' />
			<sysproperty key='target' value='${target}' />
		</java>
	</target>

	<target name="pack">
		<echo level="info" message="[Target: pack]" />
		<echo level="info" message="Packing update site..." />
		<echo level="info" message="[Packing plugins...]" />
		<java jar="${launcher}" 
			fork="true" 
			timeout="10800000"
			jvm="${jvm15home}/bin/java" 
			failonerror="true" 
			maxmemory="768m"
			error="${buildDirectory}/errorlog.txt" 
			dir="${buildDirectory}"
			output="${buildDirectory}/jarprocessorlog.txt">
			<arg line="-consolelog -application org.eclipse.update.core.siteOptimizer" />
			<arg line="-jarProcessor -verbose -processAll -pack -repack -outputDir ${repData}/plugins ${tml.plugins}" />
		</java>
		<echo level="info" message="[Packing features...]" />
		<java jar="${launcher}" 
			fork="true" 
			timeout="10800000"
			jvm="${jvm15home}/bin/java" 
			failonerror="true" 
			maxmemory="768m"
			error="${buildDirectory}/errorlog.txt" 
			dir="${buildDirectory}"
			output="${buildDirectory}/jarprocessorlog.txt">
			<arg line="-consolelog -application org.eclipse.update.core.siteOptimizer" />
			<arg line="-jarProcessor -verbose -processAll -pack -repack -outputDir ${repData}/features ${tml.features}" />
		</java>
		<echo level="info" message="[Packing sources...]" />
		<java jar="${launcher}" 
			fork="true" 
			timeout="10800000"
			jvm="${jvm15home}/bin/java" 
			failonerror="true" 
			maxmemory="768m"
			error="${buildDirectory}/errorlog.txt" 
			dir="${buildDirectory}"
			output="${buildDirectory}/jarprocessorlog.txt">
			<arg line="-consolelog -application org.eclipse.update.core.siteOptimizer" />
			<arg line="-jarProcessor -verbose -processAll -pack -repack -outputDir ${repData}/sources ${tml.plugins-src}" />
		</java>
	</target>

	<target name="gen.pack">
		<echo level="info" message="[Target: gen.pack]" />
		<echo level="info" message="${tml.download.output.path.temp}" />

		<mkdir dir="${tml.download.output.path.temp}" />

		<copy todir="${tml.download.output.path.temp}\common\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.device.common.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\common\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.device.common.utilities*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\proctools\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.device.linuxtools.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\proctools\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.device.linuxtools*.jar" />
				<include name="org.eclipse.sequoyah.device.linuxtools.base*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\examples\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.device.examples.feature*.jar" />
				<include name="org.eclipse.sequoyah.vnc.protocol.examples.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\examples\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.device.service.vncviewer*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\examples\plugins">
			<fileset dir="${tml.plugins-src}">
				<include name="org.eclipse.sequoyah.device.qemu*.jar" />
				<include name="org.eclipse.sequoyah.device.qemuarm*.jar" />
				<include name="org.eclipse.sequoyah.device.qemureact*.jar" />
				<include name="org.eclipse.sequoyah.echo*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\runtime\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.device.feature*.jar" />
				<include name="org.eclipse.sequoyah.vnc.vncviewer.feature*.jar" />
				<include name="org.eclipse.sequoyah.vnc.protocol.feature*.jar" />
				<include name="org.eclipse.sequoyah.device.common.feature*.jar" />
				<include name="org.eclipse.sequoyah.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\runtime\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.device.framework.ui*.jar" />
				<include name="org.eclipse.sequoyah.device.framework.wizard*.jar" />
				<include name="org.eclipse.sequoyah.device.framework*.jar" />
				<include name="org.eclipse.sequoyah.device.service.start*.jar" />
				<include name="org.eclipse.sequoyah.device.service.stop*.jar" />
				<include name="org.eclipse.sequoyah.vnc.vncviewer*.jar" />
				<include name="org.eclipse.sequoyah.vnc.protocol*.jar" />
				<include name="org.eclipse.sequoyah.device.common.utilities*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\device\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.device.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\device\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.device.framework.ui*.jar" />
				<include name="org.eclipse.sequoyah.device.framework.wizard*.jar" />
				<include name="org.eclipse.sequoyah.device.framework*.jar" />
				<include name="org.eclipse.sequoyah.device.service.start*.jar" />
				<include name="org.eclipse.sequoyah.device.service.stop*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\vnc\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.vnc.vncviewer.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\vnc\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.vnc.vncviewer*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\protocol\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.vnc.protocol.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\protocol\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.vnc.protocol*.jar" />
			</fileset>
		</copy>

		<!--  Localization tools   /-->
		<copy todir="${tml.download.output.path.temp}\localization\features">
			<fileset dir="${tml.features}">
				<include name="org.eclipse.sequoyah.localization.tools.feature*.jar" />
				<include name="org.eclipse.sequoyah.localization.android.feature*.jar" />
			</fileset>
		</copy>

		<copy todir="${tml.download.output.path.temp}\localization\plugins">
			<fileset dir="${tml.plugins}">
				<include name="org.eclipse.sequoyah.localization.android*.jar" />
				<include name="org.eclipse.sequoyah.localization.stringeditor*.jar" />
				<include name="org.eclipse.sequoyah.localization.tools*.jar" />
				<include name="org.eclipse.sequoyah.localization.android.help*.jar" />
			</fileset>
		</copy>

		<mkdir dir="${tml.download.output.path}\zips" />

		<zip destfile="${tml.download.output.path}\zips\Sequoyah-Common-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\common"></zip>
		<zip destfile="${tml.download.output.path}\zips\Sequoyah-Device-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\device"></zip>
		<zip destfile="${tml.download.output.path}\zips\Sequoyah-Protocol-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\protocol"></zip>
		<zip destfile="${tml.download.output.path}\zips\Sequoyah-ProcTools-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\proctools"></zip>
		<zip destfile="${tml.download.output.path}\zips\Sequoyah-VNC-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\vnc"></zip>
		<zip destfile="${tml.download.output.path}\zips\Sequoyah-Examples-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\examples"></zip>
		<zip destfile="${tml.download.output.path}\zips\Sequoyah-Runtime-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\runtime"></zip>
		<zip destfile="${tml.download.output.path}\zips\Sequoyah-Localization-${tml.zipstamp}.zip"
			basedir="${tml.download.output.path.temp}\localization"></zip>

		<copy todir="${repData}">
			<fileset dir="${data}/org.eclipse.sequoyah.site.feature">
				<include name="site.xml" />
				<include name="index.html" />
			</fileset>
		</copy>

		<mkdir dir="${repData}/web" />
		<copy todir="${repData}/web">
			<fileset dir="${data}/org.eclipse.sequoyah.site.feature/web">
				<include name="site.*" />
			</fileset>
		</copy>

		<zip destfile="${tml.download.output.path}\zips\TmL-UpdateSite-${tml.zipstamp}.zip"
			basedir="${repData}"></zip>

	</target>

	<target name="tml.sign">
		<echo level="info" message="[Target: tml.sign]" />
		<property name="stagingHome" value="/home/data/httpd/download-staging.priv" />
		<property name="projectPath" value="dsdp/tml" />
		<property name="buildId" value="${tml.timestamp}" />
		<property name="buildServerUser" value="${user}@build.eclipse.org" />

		<property name="stagingDirectory" value="${stagingHome}/${projectPath}" />
		<property name="stagingDirectoryOutput" value="${stagingDirectory}/${buildId}-out" />
		<property name="mailStatus" value="nomail" />

		<!--invoke sign script and wait-->
		<echo message="invoke sign script and wait" />

		<zip destfile="${stagingDirectory}/features.zip" basedir="${tml.download.output.path}/features"></zip>
		<zip destfile="${stagingDirectory}/plugins.zip" basedir="${tml.download.output.path}/plugins"></zip>

		<exec dir="." executable="ssh" output="signing.txt" append="false">
			<arg line="${buildServerUser} &quot;cd ${stagingDirectory}; /usr/bin/sign ${stagingDirectory}/features.zip ${mailStatus} ${stagingDirectoryOutput};ls&quot;" />
		</exec>

		<exec dir="." executable="ssh" output="signing.txt" append="false">
			<arg line="${buildServerUser} &quot;cd ${stagingDirectory}; /usr/bin/sign ${stagingDirectory}/plugins.zip ${mailStatus} ${stagingDirectoryOutput};ls&quot;" />
		</exec>
	</target>

	<target name="tml.sign.post">
		<echo level="info" message="[Target: tml.sign.post]" />
		<property name="stagingHome" value="/home/data/httpd/download-staging.priv" />
		<property name="projectPath" value="dsdp/tml" />
		<property name="buildId" value="${tml.timestamp}" />
		<property name="buildServerUser" value="${user}@build.eclipse.org" />

		<property name="stagingDirectory" value="${stagingHome}/${projectPath}" />
		<property name="stagingDirectoryOutput" value="${stagingDirectory}/${buildId}-out" />
		<property name="mailStatus" value="nomail" />

		<!--invoke sign script and wait-->
		<echo message="invoke sign script and wait" />

		<unzip dest="${tml.download.output.path}/features" src="${stagingDirectoryOutput}/features.zip"></unzip>
		<unzip dest="${tml.download.output.path}/plugins" src="${stagingDirectoryOutput}/plugins.zip"></unzip>
		<unzip dest="${repData}/features" src="${stagingDirectoryOutput}/features.zip"></unzip>
		<unzip dest="${repData}/plugins" src="${stagingDirectoryOutput}/plugins.zip"></unzip>
	</target>

	<target name="copy.update.site" depends="copy.download">
		<echo level="info" message="[Target: copy.update.site]" />
		<delete dir="${tml.updatesite}/${buildId}/${timestamp}" />
		<mkdir dir="${tml.updatesite}/${buildId}/${timestamp}" />
		<copy todir="${tml.updatesite}/${buildId}/${timestamp}">
			<fileset dir="${repData}" />
		</copy>
	</target>

	<target name="copy.update.site.nightly" depends="copy.download">
		<echo level="info" message="[Target: copy.update.site.nightly]" />
		<delete dir="${tml.updatesite}/${buildId}/Nightly/${timestamp}" />
		<mkdir dir="${tml.updatesite}/${buildId}/Nightly/${timestamp}" />
		<copy todir="${tml.updatesite}/${buildId}/Nightly/${timestamp}">
			<fileset dir="${repData}" />
		</copy>
	</target>

	<target name="copy.download" depends="gen.pack">
		<echo level="info" message="[Target: copy.download]" />
		<delete dir="${tml.downloadsite}/${tml.downstamp}" />
		<mkdir dir="${tml.downloadsite}/${tml.downstamp}" />
		<copy todir="${tml.downloadsite}/${tml.downstamp}">
			<fileset dir="${tml.download.output.path}\zips" />
		</copy>
		<copy todir="${tml.downloadsite}/${tml.downstamp}">
			<fileset dir="${tml.download.output.path}\zips" />
		</copy>
		<copy todir="${tml.downloadsite}/${tml.downstamp}">
			<fileset dir="${data}/org.eclipse.sequoyah.site.feature/drops" />
		</copy>
	</target>

	<target name="test">
		<echo message="The current user is ${user}" />
	</target>

	<target name="update_hash">
		<p2.process.artifacts repositorypath="file://${tml.updatesite}/${buildId}/Nightly/${timestamp}" />
	</target>

</project>
